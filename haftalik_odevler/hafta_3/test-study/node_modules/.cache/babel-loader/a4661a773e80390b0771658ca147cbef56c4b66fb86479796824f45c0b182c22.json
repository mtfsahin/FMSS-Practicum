{"ast":null,"code":"var _jsxFileName = \"/Users/mustafa-mac/Documents/GitHub/FMSS-Practicum/haftalik_odevler/hafta_3/test-study/src/filterEmoji.js\";\nimport React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport EmojiResults from '../EmojiResults';\nimport filterEmoji from '../filterEmoji';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndescribe('EmojiResults', () => {\n  test('renders filtered emoji list correctly', () => {\n    const searchText = 'happy';\n    const maxResults = 10;\n    const filteredEmojiList = filterEmoji(searchText, maxResults);\n    render( /*#__PURE__*/_jsxDEV(EmojiResults, {\n      emojiData: filteredEmojiList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this));\n\n    // Check if each filtered emoji title is displayed in the document\n    filteredEmojiList.forEach(emoji => {\n      expect(screen.getByText(emoji.title)).toBeInTheDocument();\n    });\n\n    // Check if the filtered emoji list is displayed with the correct length\n    expect(screen.getAllByRole('listitem')).toHaveLength(filteredEmojiList.length);\n  });\n});","map":{"version":3,"names":["React","render","screen","EmojiResults","filterEmoji","jsxDEV","_jsxDEV","describe","test","searchText","maxResults","filteredEmojiList","emojiData","fileName","_jsxFileName","lineNumber","columnNumber","forEach","emoji","expect","getByText","title","toBeInTheDocument","getAllByRole","toHaveLength","length"],"sources":["/Users/mustafa-mac/Documents/GitHub/FMSS-Practicum/haftalik_odevler/hafta_3/test-study/src/filterEmoji.js"],"sourcesContent":["import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport EmojiResults from '../EmojiResults';\nimport filterEmoji from '../filterEmoji';\n\ndescribe('EmojiResults', () => {\n  test('renders filtered emoji list correctly', () => {\n    const searchText = 'happy';\n    const maxResults = 10;\n    const filteredEmojiList = filterEmoji(searchText, maxResults);\n\n    render(<EmojiResults emojiData={filteredEmojiList} />);\n\n    // Check if each filtered emoji title is displayed in the document\n    filteredEmojiList.forEach((emoji) => {\n      expect(screen.getByText(emoji.title)).toBeInTheDocument();\n    });\n\n    // Check if the filtered emoji list is displayed with the correct length\n    expect(screen.getAllByRole('listitem')).toHaveLength(filteredEmojiList.length);\n  });\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,MAAM,QAAQ,wBAAwB;AACvD,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzCC,QAAQ,CAAC,cAAc,EAAE,MAAM;EAC7BC,IAAI,CAAC,uCAAuC,EAAE,MAAM;IAClD,MAAMC,UAAU,GAAG,OAAO;IAC1B,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,iBAAiB,GAAGP,WAAW,CAACK,UAAU,EAAEC,UAAU,CAAC;IAE7DT,MAAM,eAACK,OAAA,CAACH,YAAY;MAACS,SAAS,EAAED;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,CAAC;;IAEtD;IACAL,iBAAiB,CAACM,OAAO,CAAEC,KAAK,IAAK;MACnCC,MAAM,CAACjB,MAAM,CAACkB,SAAS,CAACF,KAAK,CAACG,KAAK,CAAC,CAAC,CAACC,iBAAiB,EAAE;IAC3D,CAAC,CAAC;;IAEF;IACAH,MAAM,CAACjB,MAAM,CAACqB,YAAY,CAAC,UAAU,CAAC,CAAC,CAACC,YAAY,CAACb,iBAAiB,CAACc,MAAM,CAAC;EAChF,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}